{
    "title": "A Failed Attempt to Expand my Neural Network",
    "date": "03-December-2023",
    "bannerImage": "../images/Neural-Network-Expansion.png",
    "content": [
        {
            "type": "paragraph",
            "text": "Two months ago, I was working on a simple Neural Network project with the standard MNIST Dataset, which almost had an accuracy of 90%. That Neural Network had 784 input neurons in the form of each pixel, 1 hidden layer with 10 neurons and 10 output neurons. <a href='..//Working-on-my-First-Neural-Network/'>I also wrote about that</a>."
        },
        {
            "type": "heading",
            "level": "3",
            "text": "Let's Experiement"
        },
        {
            "type": "paragraph",
            "text": "Because I made that Neural Network mostly by copying someone else's code and trying to understand it, I thought trying a few different things with it would be a good idea. One of those few different things was to attempt to expand this Neural Network."
        },
        {
            "type": "paragraph",
            "text": "So the plan was to have the same number of Input and Output Neurons and 2 hidden layers with 16 Neurons each. And that's what I didâ€¦ at least attempted to do."
        },
        {
            "type": "paragraph",
            "text": "Initializing the Weights and Biases."
        },
        {
            "type": "code",
            "language": "python",
            "content": "<keyword class='reserve-1'>def</keyword> <keyword class='function'>init_parameters</keyword><keyword class='braces'>(</keyword><keyword class='braces'>)</keyword><keyword class='operation'>:</keyword>\n    weights_01 <keyword class='operation'>=</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='from-class'>random</keyword><keyword class='operation'>.</keyword><keyword class='function'>rand</keyword><keyword class='braces'>(</keyword><keyword class='numbers'>16</keyword><keyword class='operation'>,</keyword> <keyword class='numbers'>784</keyword><keyword class='braces'>)</keyword> <keyword class='operation'>-</keyword> <keyword class='numbers'>0.5</keyword>\n    biases_01 <keyword class='operation'>=</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='from-class'>random</keyword><keyword class='operation'>.</keyword><keyword class='function'>rand</keyword><keyword class='braces'>(</keyword><keyword class='numbers'>16</keyword><keyword class='operation'>,</keyword> <keyword class='numbers'>1</keyword><keyword class='braces'>)</keyword> <keyword class='operation'>-</keyword> <keyword class='numbers'>0.5</keyword>\n    weights_02 <keyword class='operation'>=</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='from-class'>random</keyword><keyword class='operation'>.</keyword><keyword class='function'>rand</keyword><keyword class='braces'>(</keyword><keyword class='numbers'>16</keyword><keyword class='operation'>,</keyword> <keyword class='numbers'>16</keyword><keyword class='braces'>)</keyword> <keyword class='operation'>-</keyword> <keyword class='numbers'>0.5</keyword>\n    biases_02 <keyword class='operation'>=</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='from-class'>random</keyword><keyword class='operation'>.</keyword><keyword class='function'>rand</keyword><keyword class='braces'>(</keyword><keyword class='numbers'>16</keyword><keyword class='operation'>,</keyword> <keyword class='numbers'>1</keyword><keyword class='braces'>)</keyword> <keyword class='operation'>-</keyword> <keyword class='numbers'>0.5</keyword>\n    weights_03 <keyword class='operation'>=</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='from-class'>random</keyword><keyword class='operation'>.</keyword><keyword class='function'>rand</keyword><keyword class='braces'>(</keyword><keyword class='numbers'>10</keyword><keyword class='operation'>,</keyword> <keyword class='numbers'>16</keyword><keyword class='braces'>)</keyword> <keyword class='operation'>-</keyword> <keyword class='numbers'>0.5</keyword>\n    biases_03 <keyword class='operation'>=</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='from-class'>random</keyword><keyword class='operation'>.</keyword><keyword class='function'>rand</keyword><keyword class='braces'>(</keyword><keyword class='numbers'>10</keyword><keyword class='operation'>,</keyword> <keyword class='numbers'>1</keyword><keyword class='braces'>)</keyword> <keyword class='operation'>-</keyword> <keyword class='numbers'>0.5</keyword>\n    <keyword class='reserve-2'>return</keyword> weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03"
        },
        {
            "type": "paragraph",
            "text": "Forward Propagation Function."
        },
        {
            "type": "code",
            "language": "python",
            "content": "<keyword class='reserve-1'>def</keyword> <keyword class='function'>forward_propagation</keyword><keyword class='braces'>(</keyword>weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03<keyword class='operation'>,</keyword> x<keyword class='braces'>)</keyword><keyword class='operation'>:</keyword>\n    z1 <keyword class='operation'>=</keyword> weights_01<keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>x<keyword class='braces'>)</keyword> <keyword class='operation'>+</keyword> biases_01\n    a1 <keyword class='operation'>=</keyword> <keyword class='function'>ReLU</keyword><keyword class='braces'>(</keyword>z1<keyword class='braces'>)</keyword>\n    z2 <keyword class='operation'>=</keyword> weights_02<keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>a1<keyword class='braces'>)</keyword> <keyword class='operation'>+</keyword> biases_02\n    a2 <keyword class='operation'>=</keyword> <keyword class='function'>ReLU</keyword><keyword class='braces'>(</keyword>z2<keyword class='braces'>)</keyword>\n    z3 <keyword class='operation'>=</keyword> weights_03<keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>a2<keyword class='braces'>)</keyword> <keyword class='operation'>+</keyword> biases_03\n    a3 <keyword class='operation'>=</keyword> <keyword class='function'>softmax</keyword><keyword class='braces'>(</keyword>z3<keyword class='braces'>)</keyword>\n    <keyword class='reserve-2'>return</keyword> z1<keyword class='operation'>,</keyword> a1<keyword class='operation'>,</keyword> z2<keyword class='operation'>,</keyword> a2<keyword class='operation'>,</keyword> z3<keyword class='operation'>,</keyword> a3"
        },
        {
            "type": "paragraph",
            "text": "Backpropagation Function."
        },
        {
            "type": "code",
            "language": "python",
            "content": "<keyword class='reserve-1'>def</keyword> <keyword class='function'>back_propagation</keyword><keyword class='braces'>(</keyword>z1<keyword class='operation'>,</keyword> a1<keyword class='operation'>,</keyword> z2<keyword class='operation'>,</keyword> a2<keyword class='operation'>,</keyword> z3<keyword class='operation'>,</keyword> a3<keyword class='operation'>,</keyword> weights_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> x<keyword class='operation'>,</keyword> y<keyword class='braces'>)</keyword><keyword class='operation'>:</keyword>\n    one_hot_y <keyword class='operation'>=</keyword> <keyword class='function'>one_hot</keyword><keyword class='braces'>(</keyword>y<keyword class='braces'>)</keyword>\n    dz3 <keyword class='operation'>=</keyword> a3 <keyword class='operation'>-</keyword> one_hot_y\n    dweights_03 <keyword class='operation'>=</keyword> <keyword class='numbers'>1</keyword> <keyword class='operation'>/</keyword> m <keyword class='operation'>*</keyword> dz3<keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>a2<keyword class='operation'>.T</keyword><keyword class='braces'>)</keyword>\n    dbiases_03 <keyword class='operation'>=</keyword> <keyword class='numbers'>1</keyword> <keyword class='operation'>/</keyword> m <keyword class='operation'>*</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='function'>sum</keyword><keyword class='braces'>(</keyword>dz3<keyword class='braces'>)</keyword>\n    dz2 <keyword class='operation'>=</keyword> weights_03<keyword class='operation'>.T</keyword><keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>dz3<keyword class='braces'>)</keyword> <keyword class='operation'>*</keyword> <keyword class='function'>ReLU_derivative</keyword><keyword class='braces'>(</keyword>z2<keyword class='braces'>)</keyword>\n    dweights_02 <keyword class='operation'>=</keyword> <keyword class='numbers'>1</keyword> <keyword class='operation'>/</keyword> m <keyword class='operation'>*</keyword> dz2<keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>a1<keyword class='operation'>.T</keyword><keyword class='braces'>)</keyword>\n    dbiases_02 <keyword class='operation'>=</keyword> <keyword class='numbers'>1</keyword> <keyword class='operation'>/</keyword> m <keyword class='operation'>*</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='function'>sum</keyword><keyword class='braces'>(</keyword>dz2<keyword class='braces'>)</keyword>\n    dz1 <keyword class='operation'>=</keyword> weights_02<keyword class='operation'>.T</keyword><keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>dz2<keyword class='braces'>)</keyword> <keyword class='operation'>*</keyword> <keyword class='function'>ReLU_derivative</keyword><keyword class='braces'>(</keyword>z1<keyword class='braces'>)</keyword>\n    dweights_01 <keyword class='operation'>=</keyword> <keyword class='numbers'>1</keyword> <keyword class='operation'>/</keyword> m <keyword class='operation'>*</keyword> dz1<keyword class='operation'>.</keyword><keyword class='function'>dot</keyword><keyword class='braces'>(</keyword>x<keyword class='operation'>.T</keyword><keyword class='braces'>)</keyword>\n    dbiases_01 <keyword class='operation'>=</keyword> <keyword class='numbers'>1</keyword> <keyword class='operation'>/</keyword> m <keyword class='operation'>*</keyword> <keyword class='from-class'>np</keyword><keyword class='operation'>.</keyword><keyword class='function'>sum</keyword><keyword class='braces'>(</keyword>dz1<keyword class='braces'>)</keyword>\n    <keyword class='reserve-2'>return</keyword> dweights_01<keyword class='operation'>,</keyword> dbiases_01<keyword class='operation'>,</keyword> dweights_02<keyword class='operation'>,</keyword> dbiases_02<keyword class='operation'>,</keyword> dweights_03<keyword class='operation'>,</keyword> dbiases_03"
        },
        {
            "type": "paragraph",
            "text": "Parameters Updating Function."
        },
        {
            "type": "code",
            "language": "python",
            "content": "<keyword class='reserve-1'>def</keyword> <keyword class='function'>update_parameters</keyword><keyword class='braces'>(</keyword>weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03<keyword class='operation'>,</keyword> dweights_01<keyword class='operation'>,</keyword> dbiases_01<keyword class='operation'>,</keyword> dweights_02<keyword class='operation'>,</keyword> dbiases_02<keyword class='operation'>,</keyword> dweights_03<keyword class='operation'>,</keyword> dbiases_03<keyword class='operation'>,</keyword> alpha<keyword class='braces'>)</keyword><keyword class='operation'>:</keyword>\n    weights_01 <keyword class='operation'>=</keyword> weights_01 <keyword class='operation'>-</keyword> <keyword class='braces'>(</keyword>dweights_01 <keyword class='operation'>*</keyword> alpha<keyword class='braces'>)</keyword>\n    biases_01 <keyword class='operation'>=</keyword> biases_01 <keyword class='operation'>-</keyword> <keyword class='braces'>(</keyword>dbiases_01 <keyword class='operation'>*</keyword> alpha<keyword class='braces'>)</keyword>\n    weights_02 <keyword class='operation'>=</keyword> weights_02 <keyword class='operation'>-</keyword> <keyword class='braces'>(</keyword>dweights_02 <keyword class='operation'>*</keyword> alpha<keyword class='braces'>)</keyword>\n    biases_02 <keyword class='operation'>=</keyword> biases_02 <keyword class='operation'>-</keyword> <keyword class='braces'>(</keyword>dbiases_02 <keyword class='operation'>*</keyword> alpha<keyword class='braces'>)</keyword>\n    weights_03 <keyword class='operation'>=</keyword> weights_03 <keyword class='operation'>-</keyword> <keyword class='braces'>(</keyword>dweights_03 <keyword class='operation'>*</keyword> alpha<keyword class='braces'>)</keyword>\n    biases_03 <keyword class='operation'>=</keyword> biases_03 <keyword class='operation'>-</keyword> <keyword class='braces'>(</keyword>dbiases_03 <keyword class='operation'>*</keyword> alpha<keyword class='braces'>)</keyword>\n    <keyword class='reserve-2'>return</keyword> weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03"
        },
        {
            "type": "paragraph",
            "text": "Activation Functions, ReLU Derivative, one hot encoding, and functions to get accuracy are supposed to remain the same."
        },
        {
            "type": "paragraph",
            "text": "Now all of the functions needed can be used to train our Neural Network."
        },
        {
            "type": "code",
            "language": "python",
            "content": "weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03 <keyword class='operation'>=</keyword> <keyword class='function'>init_parameters</keyword><keyword class='braces'>(</keyword><keyword class='braces'>)</keyword>\n<keyword class='reserve-2'>for</keyword> i <keyword class='reserve-2'>in</keyword> <keyword class='from-class'>range</keyword><keyword class='braces'>(</keyword>iterations<keyword class='braces'>)</keyword><keyword class='operation'>:</keyword>\n    z1<keyword class='operation'>,</keyword> a1<keyword class='operation'>,</keyword> z2<keyword class='operation'>,</keyword> a2<keyword class='operation'>,</keyword> z3<keyword class='operation'>,</keyword> a3 <keyword class='operation'>=</keyword> <keyword class='function'>forward_propagation</keyword><keyword class='braces'>(</keyword>weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03<keyword class='operation'>,</keyword> x<keyword class='braces'>)</keyword>\n    dweights_01<keyword class='operation'>,</keyword> dbiases_01<keyword class='operation'>,</keyword> dweights_02<keyword class='operation'>,</keyword> dbiases_02<keyword class='operation'>,</keyword> dweights_03<keyword class='operation'>,</keyword> dbiases_03 <keyword class='operation'>=</keyword> <keyword class='function'>back_propagation</keyword><keyword class='braces'>(</keyword>z1<keyword class='operation'>,</keyword> a1<keyword class='operation'>,</keyword> z2<keyword class='operation'>,</keyword> a2<keyword class='operation'>,</keyword> z3<keyword class='operation'>,</keyword> a3<keyword class='operation'>,</keyword> weights_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> x<keyword class='operation'>,</keyword> y<keyword class='braces'>)</keyword>\n    weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03 <keyword class='operation'>=</keyword> <keyword class='function'>update_parameters</keyword><keyword class='braces'>(</keyword>weights_01<keyword class='operation'>,</keyword> biases_01<keyword class='operation'>,</keyword> weights_02<keyword class='operation'>,</keyword> biases_02<keyword class='operation'>,</keyword> weights_03<keyword class='operation'>,</keyword> biases_03<keyword class='operation'>,</keyword> dweights_01<keyword class='operation'>,</keyword> dbiases_01<keyword class='operation'>,</keyword> dweights_02<keyword class='operation'>,</keyword> dbiases_02<keyword class='operation'>,</keyword> dweights_03<keyword class='operation'>,</keyword> dbiases_03<keyword class='operation'>,</keyword> alpha<keyword class='braces'>)</keyword>\n    <keyword class='reserve-2'>if</keyword> i <keyword class='operation'>%</keyword> <keyword class='numbers'>200</keyword> <keyword class='operation'>==</keyword> <keyword class='numbers'>0</keyword><keyword class='operation'>:</keyword>\n        <keyword class='function'>print</keyword><keyword class='braces'>(</keyword><keyword class='quotes'>'Iteration: '</keyword><keyword class='operation'>,</keyword> i<keyword class='braces'>)</keyword>\n        <keyword class='function'>print</keyword><keyword class='braces'>(</keyword><keyword class='quotes'>'Accuracy: '</keyword><keyword class='operation'>,</keyword> <keyword class='function'>get_accuracy</keyword><keyword class='braces'>(</keyword><keyword class='function'>get_predictions</keyword><keyword class='braces'>(</keyword>a2<keyword class='braces'>)</keyword><keyword class='operation'>,</keyword> Y_train<keyword class='braces'>)</keyword> <keyword class='operation'>*</keyword> <keyword class='numbers'>100</keyword><keyword class='operation'>,</keyword> <keyword class='quotes'>'%'</keyword><keyword class='braces'>)</keyword>"
        },
        {
            "type": "paragraph",
            "text": "Something that's left now is to run the program and see at what accuracy this Neural Network peaks. And, hit Run."
        },
        {
            "type": "image",
            "src": "../images/Accuracy-Fluctuation.png",
            "alt": "Accuracy just fluctuates randomly"
        },
        {
            "type": "paragraph",
            "text": "So the problem here is that instead of accuracy going up, it just randomly fluctuates around without gradually increasing."
        },
        {
            "type": "paragraph",
            "text": "I tried to analyze the code and try to find where I made the mistake. Eventually, I decided to look for the solution over to a magical place, yes I am talking about the Internet. After scrolling through a bunch of pages and source code, I got more confused rather than finding a solution. I still haven't found a solution to it."
        },
        {
            "type": "paragraph",
            "text": "I have just changed its private repository into a <a href='https://github.com/IshaqJunejo/Digit-Recognizer'>public repository</a>, so you can also have a look at it if you still find the problem unsolved and you have the answer, I would be thankful to you for having to learn from you."
        }
    ]
}